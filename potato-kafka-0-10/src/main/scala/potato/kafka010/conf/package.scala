package potato.kafka010

import org.apache.hadoop.hbase.HConstants
import org.apache.kafka.clients.CommonClientConfigs
import org.apache.kafka.clients.consumer.ConsumerConfig
import org.apache.kafka.clients.producer.ProducerConfig
import org.apache.kafka.common.serialization.{StringDeserializer, StringSerializer}
import potato.common.conf.POTATO_PREFIX

package object conf {
  val POTATO_KAFKA_PREFIX: String = POTATO_PREFIX + "kafka."

  val POTATO_KAFKA_COMMON_CONF_PREFIX: String = POTATO_KAFKA_PREFIX + "common."
  val POTATO_KAFKA_COMMON_BOOTSTRAP_SERVERS_KEY: String = POTATO_KAFKA_COMMON_CONF_PREFIX + CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG

  val POTATO_KAFKA_CONSUMER_PREFIX: String = POTATO_KAFKA_PREFIX + "consumer."
  val POTATO_KAFKA_CONSUMER_GROUP_ID_KEY: String = POTATO_KAFKA_CONSUMER_PREFIX + ConsumerConfig.GROUP_ID_CONFIG
  /**
   * 支持earliest|latest|none。
   */
  val POTATO_KAFKA_CONSUMER_OFFSET_RESET_KEY: String = POTATO_KAFKA_CONSUMER_PREFIX + ConsumerConfig.AUTO_OFFSET_RESET_CONFIG
  val POTATO_KAFKA_CONSUMER_OFFSET_RESET_DEFAULT: String = "none"
  val POTATO_KAFKA_CONSUMER_KEY_DESERIALIZER_KEY: String = POTATO_KAFKA_CONSUMER_PREFIX + ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG
  val POTATO_KAFKA_CONSUMER_KEY_DESERIALIZER_DEFAULT: String = classOf[StringDeserializer].getName
  val POTATO_KAFKA_CONSUMER_VALUE_DESERIALIZER_KEY: String = POTATO_KAFKA_CONSUMER_PREFIX + ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG
  val POTATO_KAFKA_CONSUMER_VALUE_DESERIALIZER_DEFAULT: String = classOf[StringDeserializer].getName

  val POTATO_KAFKA_PRODUCER_PREFIX: String = POTATO_KAFKA_PREFIX + "producer."
  val POTATO_KAFKA_PRODUCER_KEY_SERIALIZER_KEY: String = POTATO_KAFKA_PRODUCER_PREFIX + ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG
  val POTATO_KAFKA_PRODUCER_KEY_SERIALIZER_DEFAULT: String = classOf[StringSerializer].getName
  val POTATO_KAFKA_PRODUCER_VALUE_SERIALIZER_KEY: String = POTATO_KAFKA_PRODUCER_PREFIX + ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG
  val POTATO_KAFKA_PRODUCER_VALUE_SERIALIZER_DEFAULT: String = classOf[StringSerializer].getName

  val POTATO_KAFKA_SOURCE_PREFIX: String = POTATO_KAFKA_PREFIX + "source."
  val POTATO_KAFKA_SOURCE_SUBSCRIBE_TOPICS_KEY: String = POTATO_KAFKA_SOURCE_PREFIX + "subscribe.topics"

  val POTATO_KAFKA_OFFSETS_PREFIX: String = POTATO_KAFKA_PREFIX + "offsets."
  val POTATO_KAFKA_OFFSETS_STORAGE_PREFIX: String = POTATO_KAFKA_OFFSETS_PREFIX + "storage."
  val POTATO_KAFKA_OFFSETS_STORAGE_TYPE_KEY: String = POTATO_KAFKA_OFFSETS_STORAGE_PREFIX + "type"
  val POTATO_KAFKA_OFFSETS_STORAGE_TYPE_DEFAULT: String = "kafka"
  val POTATO_KAFKA_OFFSETS_STORAGE_AUTO_UPDATE_KEY: String = POTATO_KAFKA_OFFSETS_STORAGE_PREFIX + "auto.update"
  val POTATO_KAFKA_OFFSETS_STORAGE_AUTO_UPDATE_DEFAULT: String = "false"
  val POTATO_KAFKA_OFFSETS_STORAGE_UPDATE_DELAY_KEY: String = POTATO_KAFKA_OFFSETS_STORAGE_PREFIX + "update.delay"
  val POTATO_KAFKA_OFFSETS_STORAGE_UPDATE_DELAY_DEFAULT = "0"

  val POTATO_KAFKA_OFFSETS_STORAGE_HBASE_PREFIX: String = POTATO_KAFKA_OFFSETS_STORAGE_PREFIX + "hbase."
  val POTATO_KAFKA_OFFSETS_STORAGE_HBASE_TABLE_KEY: String = POTATO_KAFKA_OFFSETS_STORAGE_HBASE_PREFIX + "table"
  val POTATO_KAFKA_OFFSETS_STORAGE_HBASE_TABLE_DEFAULT: String = "kafka_offsets_storage"
  val POTATO_KAFKA_OFFSETS_STORAGE_HBASE_FAMILY_KEY: String = POTATO_KAFKA_OFFSETS_STORAGE_HBASE_PREFIX + "family"
  val POTATO_KAFKA_OFFSETS_STORAGE_HBASE_FAMILY_DEFAULT: String = "partition"
  val POTATO_KAFKA_OFFSETS_STORAGE_HBASE_CONF_PREFIX: String = POTATO_KAFKA_OFFSETS_STORAGE_HBASE_PREFIX + "conf."
  val POTATO_KAFKA_OFFSETS_STORAGE_HBASE_ZOO_QUORUM_KEY: String = POTATO_KAFKA_OFFSETS_STORAGE_HBASE_CONF_PREFIX + HConstants.ZOOKEEPER_QUORUM
  val POTATO_KAFKA_OFFSETS_STORAGE_HBASE_ZOO_PORT_KEY: String = POTATO_KAFKA_OFFSETS_STORAGE_HBASE_CONF_PREFIX + HConstants.ZOOKEEPER_CLIENT_PORT
}
