package spark.potato.kafka

import org.apache.kafka.common.serialization.StringSerializer
import spark.potato.common.conf.POTATO_PREFIX

package object conf {
  val POTATO_KAFKA_PREFIX: String = POTATO_PREFIX + "kafka."

  val POTATO_KAFKA_CONSUMER_CONF_PREFIX: String = POTATO_KAFKA_PREFIX + "consumer.conf."
  val POTATO_KAFKA_CONSUMER_GROUP_ID_KEY: String = POTATO_KAFKA_CONSUMER_CONF_PREFIX + "group.id"
  val POTATO_KAFKA_CONSUMER_OFFSET_RESET_KEY: String = POTATO_KAFKA_CONSUMER_CONF_PREFIX + "auto.offset.reset"
  val POTATO_KAFKA_CONSUMER_BOOTSTRAP_SERVERS_KEY: String = POTATO_KAFKA_CONSUMER_CONF_PREFIX + "bootstrap.servers"

  val POTATO_KAFKA_PRODUCER_PREFIX: String = POTATO_KAFKA_PREFIX + "producer."
  val POTATO_KAFKA_PRODUCER_CONF_PREFIX: String = POTATO_KAFKA_PRODUCER_PREFIX + "conf."
  val POTATO_KAFKA_PRODUCER_BOOTSTRAP_SERVERS_KEY: String = POTATO_KAFKA_PRODUCER_CONF_PREFIX + "bootstrap.servers"
  val POTATO_KAFKA_PRODUCER_KEY_SERIALIZER_KEY: String = POTATO_KAFKA_PRODUCER_CONF_PREFIX + "key.serializer"
  val POTATO_KAFKA_PRODUCER_KEY_SERIALIZER_DEFAULT: String = POTATO_KAFKA_PRODUCER_CONF_PREFIX + classOf[StringSerializer].getName
  val POTATO_KAFKA_PRODUCER_VALUE_SERIALIZER_KEY: String = POTATO_KAFKA_PRODUCER_CONF_PREFIX + "value.serializer"
  val POTATO_KAFKA_PRODUCER_VALUE_SERIALIZER_DEFAULT: String = POTATO_KAFKA_PRODUCER_CONF_PREFIX + classOf[StringSerializer].getName

  val POTATO_KAFKA_SOURCE_PREFIX: String = POTATO_KAFKA_PREFIX + "source."
  val POTATO_KAFKA_SOURCE_SUBSCRIBE_TOPICS_KEY: String = POTATO_KAFKA_SOURCE_PREFIX + "subscribe.topics"

  val POTATO_KAFKA_OFFSETS_PREFIX: String = POTATO_KAFKA_PREFIX + "offsets."
  val POTATO_KAFKA_OFFSETS_STORAGE_KEY: String = POTATO_KAFKA_OFFSETS_PREFIX + "storage"
  val POTATO_KAFKA_OFFSETS_STORAGE_DEFAULT: String = POTATO_KAFKA_OFFSETS_PREFIX + "kafka"
  val POTATO_KAFKA_OFFSETS_AUTO_UPDATE_KEY: String = POTATO_KAFKA_OFFSETS_PREFIX + "auto.update"
  val POTATO_KAFKA_OFFSETS_AUTO_UPDATE_DEFAULT: String = "true"
  val POTATO_KAFKA_OFFSETS_AUTO_UPDATE_DELAY_KEY: String = POTATO_KAFKA_OFFSETS_PREFIX + "auto.update.delay"
  val POTATO_KAFKA_OFFSETS_AUTO_UPDATE_DELAY_DEFAULT = "0"

  val POTATO_KAFKA_OFFSETS_STORAGE_HBASE_PREFIX: String = POTATO_KAFKA_OFFSETS_PREFIX + "storage.hbase."
  val POTATO_KAFKA_OFFSETS_STORAGE_HBASE_TABLE_KEY: String = POTATO_KAFKA_OFFSETS_STORAGE_HBASE_PREFIX + "table"
  val POTATO_KAFKA_OFFSETS_STORAGE_HBASE_TABLE_DEFAULT: String = "kafka_offsets_storage"
  val POTATO_KAFKA_OFFSETS_STORAGE_HBASE_FAMILY_KEY: String = POTATO_KAFKA_OFFSETS_STORAGE_HBASE_PREFIX + "family"
  val POTATO_KAFKA_OFFSETS_STORAGE_HBASE_FAMILY_DEFAULT: String = "partition"
  val POTATO_KAFKA_OFFSETS_STORAGE_HBASE_CONF_PREFIX: String = POTATO_KAFKA_OFFSETS_STORAGE_HBASE_PREFIX + "conf."
  val POTATO_KAFKA_OFFSETS_STORAGE_HBASE_ZOOKEEPER_QUORUM_KEY: String = POTATO_KAFKA_OFFSETS_STORAGE_HBASE_CONF_PREFIX + "hbase.zookeeper.quorum"
  val POTATO_KAFKA_OFFSETS_STORAGE_HBASE_CLIENT_PORT_KEY: String = POTATO_KAFKA_OFFSETS_STORAGE_HBASE_CONF_PREFIX + "hbase.zookeeper.property.clientPort"

}
