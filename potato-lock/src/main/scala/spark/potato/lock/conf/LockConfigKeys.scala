package spark.potato.lock.conf

import spark.potato.common.conf.CommonConfigKeys.POTATO_PREFIX

object LockConfigKeys {
  val POTATO_RUNNING_LOCK_PREFIX: String = POTATO_PREFIX + "running.lock."

  val POTATO_RUNNING_LOCK_ENABLE_KEY: String = POTATO_RUNNING_LOCK_PREFIX + "enable"
  val POTATO_RUNNING_LOCK_ENABLE_DEFAULT: Boolean = true
  val POTATO_RUNNING_LOCK_TRY_MAX_KEY: String = POTATO_RUNNING_LOCK_PREFIX + "try.max"
  val POTATO_RUNNING_LOCK_TRY_MAX_DEFAULT: Int = 3
  val POTATO_RUNNING_LOCK_TRY_INTERVAL_MS_KEY: String = POTATO_RUNNING_LOCK_PREFIX + "try.interval.ms"
  val POTATO_RUNNING_LOCK_TRY_INTERVAL_MS_DEFAULT: Int = 30000
  val POTATO_RUNNING_LOCK_FORCE_KEY: String = POTATO_RUNNING_LOCK_PREFIX + "force"
  val POTATO_RUNNING_LOCK_FORCE_DEFAULT: Boolean = false
  val POTATO_RUNNING_LOCK_HEARTBEAT_INTERVAL_MS_KEY: String = POTATO_RUNNING_LOCK_PREFIX + "heartbeat.interval.ms"
  val POTATO_RUNNING_LOCK_HEARTBEAT_INTERVAL_MS_DEFAULT: Int = 10000
  val POTATO_RUNNING_LOCK_HEARTBEAT_TIMEOUT_MS_KEY: String = POTATO_RUNNING_LOCK_PREFIX + "heartbeat.timeout.ms"
  val POTATO_RUNNING_LOCK_HEARTBEAT_TIMEOUT_MS_DEFAULT: Int = 90000
  val POTATO_RUNNING_LOCK_TYPE_KEY: String = POTATO_RUNNING_LOCK_PREFIX + "type"
  val POTATO_RUNNING_LOCK_TYPE_DEFAULT: String = "zookeeper"

  val POTATO_RUNNING_LOCK_ZOOKEEPER_PREFIX: String = POTATO_RUNNING_LOCK_PREFIX + "zookeeper."
  val POTATO_RUNNING_LOCK_ZOOKEEPER_ADDR_KEY: String = POTATO_RUNNING_LOCK_ZOOKEEPER_PREFIX + "addr"
  val POTATO_RUNNING_LOCK_ZOOKEEPER_PATH_KEY: String = POTATO_RUNNING_LOCK_ZOOKEEPER_PREFIX + "path"
}
