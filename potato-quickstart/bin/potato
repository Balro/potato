#!/usr/bin/env bash
POTATO_VERSION=0.1.3-SNAPSHOT

usage() {
  cat <<EOF
Usage:
  $(basename "$0") [opts] <module> [module_args]

  opts:
    -h|--help     ->  show module usage.
    -v|--version  ->  show potato version.

  module:
    submit        ->  submit app to cluster.
    lock          ->  manage app lock.
    offsets       ->  manage kafka offsets.
    filemerge     ->  hdfs file merge util.
EOF
}

source_env() {
  test -r /etc/profile && source /etc/profile
  test -r ~/.bash_profile && source ~/.bash_profile

  test -z "$POTATO_HOME" && POTATO_HOME=$(cd -P "$(dirname "$0")/../" && pwd || exit)
  test -z "$POTATO_BIN_DIR" && POTATO_BIN_DIR=$POTATO_HOME/bin
  test -z "$POTATO_LIB_DIR" && POTATO_LIB_DIR=$POTATO_HOME/lib
  test -z "$POTATO_LOG_DIR" && POTATO_LOG_DIR=$POTATO_HOME/logs
  export POTATO_HOME
  export POTATO_BIN_DIR
  export POTATO_LIB_DIR
  export POTATO_LOG_DIR

  if [ "$SPARK_BIN" ]; then
    hash "$SPARK_BIN" || test -x "$SPARK_BIN" || {
      echo "env SPARK_BIN:$SPARK_BIN not valid."
      exit 1
    }
  elif hash spark-submit; then
    SPARK_BIN=spark-submit
  elif [ -x "$SPARK_HOME/bin/spark-submit" ]; then
    SPARK_BIN=$SPARK_HOME/bin/spark-submit
  else
    echo "spark-submit not found" >&2
    exit 1
  fi
  export SPARK_BIN
}

# export_prop <conf_file> <conf_key> <key_name> [default_value]
# -> find the expecified conf_key on conf_file, export prop_key=prop_value|default_value
export_prop() {
  eval "local ${3}_=\"$(grep "^$2=" "$1" | tail -n 1 | awk -F '=' '{print $2}')\""
  test "$(eval echo \$"${3}"_)" && {
    eval export "$3"=\$"${3}"_
    return
  }
  test "$4" && {
    export "$3"="$4"
    return
  }
  echo "prop $3 not found in $1"
  exit 1
}

# append_dep_jars <jars_dir>
# -> append jar files to env DEP_JARS .
append_dep_jars() {
  local dep_jars_dir="$1"
  if [ ! -d "$dep_jars_dir" ]; then
    echo "$dep_jars_dir not found."
    exit 1
  fi
  for jar in "$dep_jars_dir"/*; do
    test -r "$jar" && {
      if [ "$DEP_JARS" ]; then
        DEP_JARS="$jar,$DEP_JARS"
      else
        DEP_JARS="$jar"
      fi
    }
  done
  export DEP_JARS
}

select_module() {
  for m in "$POTATO_HOME"/bin/modules/*; do
    grep -Eq "^(export\ +)?module_name=[\'\"]?$1[\'\"]?$" "$m" && {
      source "$m"
      break
    }
  done

  test "$module_name" || {
    echo "module $1 not found" >&2
    usage
    exit 1
  }
}

main() {
  source_env
  while [ $# -gt 0 ]; do
    case "$1" in
    "-h" | "--help")
      shift
      select_module "$1"
      module_usage
      exit 0
      ;;
    "-v" | "--version")
      echo "potato version $POTATO_VERSION"
      exit 0
      ;;
    *)
      select_module "$1"
      shift
      module_run "$@"
      exit $?
      ;;
    esac
    shift
  done

  usage
}

test "$(basename "$0")" == "potato" && main "$@"
